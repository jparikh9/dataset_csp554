# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jspPuvAm2ByZCDgf-y1xSRst_mllJt8D
"""

from pymongo import MongoClient
import time

# Replace these variables with your AWS DocumentDB connection details
DB_CLUSTER_ENDPOINT = 'docdb-2023-12-02-21-57-48.cluster-cwxr4ybijym6.us-east-2.docdb.amazonaws.com'
DB_PORT = 27017  # Change this if your DocumentDB uses a different port
DB_NAME = 'myntraProductsDB'
DB_USER = 'jinit009'
DB_PASSWORD = 'bigdataDocdb'

# Connect to AWS DocumentDB
client = MongoClient(f"mongodb://{DB_USER}:{DB_PASSWORD}@{DB_CLUSTER_ENDPOINT}:{DB_PORT}/{DB_NAME}?ssl=true&ssl_cert_reqs=CERT_NONE")

# Select the database and collection
db = client[DB_NAME]
collection = db['your_collection_name']

# Function to measure time for CRUD operations
def measure_time_for_crud_operations():
    # Measure time for Create operation
    start_time = time.time()
    # Perform Create operation
    new_document = {"key": "value"}  # Replace this with your document data
    collection.insert_one(new_document)
    end_time = time.time()
    create_time = end_time - start_time
    print(f"Create operation took {create_time} seconds")

    # Measure time for Read operation
    start_time = time.time()
    # Perform Read operation
    read_document = collection.find_one({"ProductID": 10267605})  # Replace this with your query
    end_time = time.time()
    read_time = end_time - start_time
    print(f"Read operation took {read_time} seconds")

    # Measure time for Update operation
    start_time = time.time()
    # Perform Update operation
    update_query = {"key": "value"}  # Replace this with your update query
    update_data = {"$set": {"updated_key": "updated_value"}}  # Replace this with your update data
    collection.update_one(update_query, update_data)
    end_time = time.time()
    update_time = end_time - start_time
    print(f"Update operation took {update_time} seconds")

    # Measure time for Delete operation
    start_time = time.time()
    # Perform Delete operation
    delete_query = {"key": "value"}  # Replace this with your delete query
    collection.delete_one(delete_query)
    end_time = time.time()
    delete_time = end_time - start_time
    print(f"Delete operation took {delete_time} seconds")

def measure_read():
  start_time = time.time()
  # Perform Read operation
  read_document = collection.find_one({"ProductID": 10267605})  # Replace this with your query
  end_time = time.time()
  read_time = end_time - start_time
  print(f"Read operation took {read_time} seconds")

# Measure time for CRUD operations
#measure_time_for_crud_operations()
measure_read()

# Close the connection
client.close()